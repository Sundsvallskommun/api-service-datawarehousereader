integration:
  party:
    connectTimeout: 5
    readTimeout: 30
logging:
  level:
    root: INFO
openapi:
  name: ${spring.application.name}
  title: ${spring.application.name}
  version: '@project.version@'
resilience4j:
  circuitbreaker:
    instances:
      party:
        ignoreExceptions: se.sundsvall.dept44.exception.ClientProblem
spring:
  application:
    name: api-datawarehousereader
  cache:
    cache-names: partyIds, legalIds
    caffeine:
      spec: maximumSize=1000, expireAfterWrite=86400s
  datasource:
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    open-in-view: false
    properties:
      hibernate:
        proc:
          param_null_passing: true
      jakarta:
        persistence:
          schema-generation:
            database:
              action: none
  security:
    oauth2:
      client:
        registration:
          party:
            authorization-grant-type: client_credentials
            provider: party
springdoc:
  swagger-ui:
    operationsSorter: method
